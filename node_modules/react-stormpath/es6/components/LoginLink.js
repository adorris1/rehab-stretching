'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRouter = require('react-router');

var _Context = require('./../Context');

var _Context2 = _interopRequireDefault(_Context);

var LoginLink = (function (_React$Component) {
  _inherits(LoginLink, _React$Component);

  function LoginLink() {
    _classCallCheck(this, LoginLink);

    _React$Component.apply(this, arguments);
  }

  LoginLink.prototype.render = function render() {
    var router = _Context2['default'].getInstance().getRouter();

    var loginRoute = router.getLoginRoute();
    var targetPath = loginRoute ? loginRoute.path : '/login';

    return _react2['default'].createElement(
      _reactRouter.Link,
      { to: targetPath, className: this.props.className },
      this.props.children ? this.props.children : 'Login'
    );
  };

  return LoginLink;
})(_react2['default'].Component);

exports['default'] = LoginLink;
module.exports = exports['default'];