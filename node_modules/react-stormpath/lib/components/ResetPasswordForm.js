'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _LoginLink = require('./LoginLink');

var _LoginLink2 = _interopRequireDefault(_LoginLink);

var _actionsUserActions = require('../actions/UserActions');

var _actionsUserActions2 = _interopRequireDefault(_actionsUserActions);

var ResetPasswordForm = (function (_React$Component) {
  _inherits(ResetPasswordForm, _React$Component);

  function ResetPasswordForm() {
    _classCallCheck(this, ResetPasswordForm);

    _React$Component.apply(this, arguments);

    this.state = {
      fields: {
        email: ''
      },
      isRequestSent: false,
      errorMessage: null
    };
  }

  ResetPasswordForm.prototype.onFormSubmit = function onFormSubmit(e) {
    var self = this;
    e.preventDefault();

    _actionsUserActions2['default'].forgotPassword(this.state.fields, function (err) {
      if (err) {
        self.setState({ errorMessage: err.message });
        return;
      }
      self.setState({ isRequestSent: true });
    });
  };

  ResetPasswordForm.prototype.onEmailChanged = function onEmailChanged(e) {
    this.state.fields.email = e.target.value;
  };

  ResetPasswordForm.prototype.render = function render() {
    return _react2['default'].createElement(
      'div',
      { className: 'row' },
      this.state.isRequestSent ? _react2['default'].createElement(
        'div',
        { className: 'col-sm-offset-4 col-xs-12 col-sm-4' },
        this.state.errorMessage === null ? _react2['default'].createElement(
          'div',
          null,
          _react2['default'].createElement(
            'p',
            { className: 'alert alert-success' },
            'We have sent a password reset link to the email address of the account that you specified. Please check your email for this message, then click on the link.'
          ),
          _react2['default'].createElement(
            'p',
            { className: 'pull-right' },
            _react2['default'].createElement(
              _LoginLink2['default'],
              null,
              'Back to Login'
            )
          )
        ) : _react2['default'].createElement(
          'div',
          { className: 'alert alert-danger' },
          'Sorry, there was a problem with that email or username.  Please try again.'
        )
      ) : _react2['default'].createElement(
        'div',
        { className: 'col-xs-12' },
        _react2['default'].createElement(
          'form',
          { className: 'form-horizontal', onSubmit: this.onFormSubmit.bind(this) },
          _react2['default'].createElement(
            'div',
            { className: 'form-group' },
            _react2['default'].createElement(
              'label',
              { htmlFor: 'spEmail', className: 'col-xs-12 col-sm-4 control-label' },
              'Email or Username'
            ),
            _react2['default'].createElement(
              'div',
              { className: 'col-xs-12 col-sm-4' },
              _react2['default'].createElement('input', { className: 'form-control', id: 'spEmail', onChange: this.onEmailChanged.bind(this), placeholder: 'Your Email Address' })
            )
          ),
          _react2['default'].createElement(
            'div',
            { className: 'form-group' },
            _react2['default'].createElement(
              'div',
              { className: 'col-sm-offset-4 col-xs-12' },
              this.state.errorMessage ? _react2['default'].createElement(
                'p',
                { className: 'text-danger' },
                this.state.errorMessage
              ) : null,
              _react2['default'].createElement(
                'button',
                { type: 'submit', className: 'btn btn-primary' },
                'Request Password Reset'
              )
            )
          )
        )
      )
    );
  };

  return ResetPasswordForm;
})(_react2['default'].Component);

exports['default'] = ResetPasswordForm;
module.exports = exports['default'];