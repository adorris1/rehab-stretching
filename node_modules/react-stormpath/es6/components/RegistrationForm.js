'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactMixin = require('react-mixin');

var _reactMixin2 = _interopRequireDefault(_reactMixin);

var _reactRouter = require('react-router');

var _componentsLoginLink = require('../components/LoginLink');

var _componentsLoginLink2 = _interopRequireDefault(_componentsLoginLink);

var _actionsUserActions = require('../actions/UserActions');

var _actionsUserActions2 = _interopRequireDefault(_actionsUserActions);

var RegistrationForm = (function (_React$Component) {
  _inherits(RegistrationForm, _React$Component);

  function RegistrationForm() {
    _classCallCheck(this, _RegistrationForm);

    _React$Component.apply(this, arguments);

    this.state = {
      fields: {
        givenName: '',
        surname: '',
        email: '',
        password: ''
      },
      isProcessing: false,
      isAccountCreated: false,
      isAccountEnabled: false,
      errorMessage: null
    };
  }

  RegistrationForm.prototype.onFormSubmit = function onFormSubmit(e) {
    e.preventDefault();

    var self = this;

    self.setState({
      isProcessing: true
    });

    _actionsUserActions2['default'].register(this.state.fields, function (err, result) {
      if (err) {
        self.setState({
          errorMessage: err.message,
          isProcessing: false
        });
      } else {
        if (result.status === 'ENABLED') {
          _actionsUserActions2['default'].login({
            username: self.state.fields.email || self.state.fields.username,
            password: self.state.fields.password
          }, function (err) {
            if (err) {
              self.setState({
                isProcessing: false,
                isAccountCreated: false,
                errorMessage: err.message
              });
            } else {
              self.setState({
                isProcessing: false,
                isAccountCreated: true,
                isAccountEnabled: true
              });
            }
          });
        } else {
          self.setState({
            isProcessing: false,
            isAccountCreated: true,
            isAccountEnabled: false
          });
        }
      }
    });
  };

  RegistrationForm.prototype.onFirstNameChanged = function onFirstNameChanged(e) {
    this.state.fields.givenName = e.target.value;
  };

  RegistrationForm.prototype.onLastNameChanged = function onLastNameChanged(e) {
    this.state.fields.surname = e.target.value;
  };

  RegistrationForm.prototype.onEmailChanged = function onEmailChanged(e) {
    this.state.fields.email = e.target.value;
  };

  RegistrationForm.prototype.onPasswordChanged = function onPasswordChanged(e) {
    this.state.fields.password = e.target.value;
  };

  RegistrationForm.prototype.render = function render() {
    return _react2['default'].createElement(
      'div',
      { className: 'sp-login-form' },
      this.state.isAccountCreated ? _react2['default'].createElement(
        'div',
        { className: 'row' },
        _react2['default'].createElement(
          'div',
          { className: 'col-sm-offset-4 col-xs-12 col-sm-4' },
          this.state.isAccountEnabled ? _react2['default'].createElement(
            'p',
            { className: 'alert alert-success' },
            'Your account has been created. ',
            _react2['default'].createElement(
              _componentsLoginLink2['default'],
              null,
              'Login Now'
            ),
            '.'
          ) : _react2['default'].createElement(
            'div',
            null,
            _react2['default'].createElement(
              'p',
              { className: 'alert alert-success' },
              'Your account has been created. Please check your email for a verification link.'
            ),
            _react2['default'].createElement(
              'p',
              { className: 'pull-right' },
              _react2['default'].createElement(
                _componentsLoginLink2['default'],
                null,
                'Back to Login'
              )
            )
          )
        )
      ) : _react2['default'].createElement(
        'div',
        { className: 'row' },
        _react2['default'].createElement(
          'div',
          { className: 'col-xs-12' },
          _react2['default'].createElement(
            'form',
            { className: 'form-horizontal', onSubmit: this.onFormSubmit.bind(this) },
            _react2['default'].createElement(
              'div',
              { className: 'form-group' },
              _react2['default'].createElement(
                'label',
                { htmlFor: 'spFirstName', className: 'col-xs-12 col-sm-4 control-label' },
                'First Name'
              ),
              _react2['default'].createElement(
                'div',
                { className: 'col-xs-12 col-sm-4' },
                _react2['default'].createElement('input', { className: 'form-control', id: 'spFirstName', placeholder: 'First Name', disabled: this.state.isProcessing, onChange: this.onFirstNameChanged.bind(this) })
              )
            ),
            _react2['default'].createElement(
              'div',
              { className: 'form-group' },
              _react2['default'].createElement(
                'label',
                { htmlFor: 'spLastName', className: 'col-xs-12 col-sm-4 control-label' },
                'Last Name'
              ),
              _react2['default'].createElement(
                'div',
                { className: 'col-xs-12 col-sm-4' },
                _react2['default'].createElement('input', { className: 'form-control', id: 'spLastName', placeholder: 'Last Name', disabled: this.state.isProcessing, onChange: this.onLastNameChanged.bind(this) })
              )
            ),
            _react2['default'].createElement(
              'div',
              { className: 'form-group' },
              _react2['default'].createElement(
                'label',
                { htmlFor: 'spEmail', className: 'col-xs-12 col-sm-4 control-label' },
                'Email'
              ),
              _react2['default'].createElement(
                'div',
                { className: 'col-xs-12 col-sm-4' },
                _react2['default'].createElement('input', { className: 'form-control', id: 'spEmail', placeholder: 'Email', disabled: this.state.isProcessing, onChange: this.onEmailChanged.bind(this) })
              )
            ),
            _react2['default'].createElement(
              'div',
              { className: 'form-group' },
              _react2['default'].createElement(
                'label',
                { htmlFor: 'spPassword', className: 'col-xs-12 col-sm-4 control-label' },
                'Password'
              ),
              _react2['default'].createElement(
                'div',
                { className: 'col-xs-12 col-sm-4' },
                _react2['default'].createElement('input', { type: 'password', className: 'form-control', id: 'spPassword', placeholder: 'Password', disabled: this.state.isProcessing, onChange: this.onPasswordChanged.bind(this) })
              )
            ),
            _react2['default'].createElement(
              'div',
              { className: 'form-group' },
              _react2['default'].createElement(
                'div',
                { className: 'col-sm-offset-4 col-sm-4' },
                this.state.errorMessage === null ? null : _react2['default'].createElement(
                  'p',
                  { className: 'alert alert-danger' },
                  this.state.errorMessage
                ),
                _react2['default'].createElement(
                  'button',
                  { type: 'submit', className: 'btn btn-primary', disabled: this.state.isProcessing },
                  'Register'
                )
              )
            )
          )
        )
      )
    );
  };

  var _RegistrationForm = RegistrationForm;
  RegistrationForm = _reactMixin2['default'].decorate(_reactRouter.History)(RegistrationForm) || RegistrationForm;
  return RegistrationForm;
})(_react2['default'].Component);

exports['default'] = RegistrationForm;
module.exports = exports['default'];