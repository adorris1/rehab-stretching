'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactMixin = require('react-mixin');

var _reactMixin2 = _interopRequireDefault(_reactMixin);

var _reactRouter = require('react-router');

var _Context = require('./../Context');

var _Context2 = _interopRequireDefault(_Context);

var _actionsUserActions = require('../actions/UserActions');

var _actionsUserActions2 = _interopRequireDefault(_actionsUserActions);

var LoginForm = (function (_React$Component) {
  _inherits(LoginForm, _React$Component);

  function LoginForm() {
    _classCallCheck(this, _LoginForm);

    _React$Component.apply(this, arguments);

    this.state = {
      username: '',
      password: '',
      isProcessing: false,
      errorMessage: null
    };
  }

  LoginForm.prototype.onFormSubmit = function onFormSubmit(e) {
    e.preventDefault();

    var self = this;

    var redirectTo = this.props.redirectTo || '/';

    self.setState({ isProcessing: true });

    _actionsUserActions2['default'].login({
      username: this.state.username,
      password: this.state.password
    }, function (err, result) {
      self.setState({ isProcessing: false });

      if (err) {
        self.setState({ errorMessage: err.message });
      } else {
        self.history.pushState(null, redirectTo);
      }
    });
  };

  LoginForm.prototype.onUsernameChanged = function onUsernameChanged(e) {
    this.setState({ username: e.target.value });
  };

  LoginForm.prototype.onPasswordChanged = function onPasswordChanged(e) {
    this.setState({ password: e.target.value });
  };

  LoginForm.prototype.render = function render() {
    return _react2['default'].createElement(
      'div',
      { className: 'login' },
      _react2['default'].createElement(
        'div',
        { className: 'row' },
        _react2['default'].createElement(
          'div',
          { className: 'col-xs-12' },
          _react2['default'].createElement(
            'form',
            { className: 'form-horizontal', onSubmit: this.onFormSubmit.bind(this) },
            _react2['default'].createElement(
              'div',
              { className: 'form-group' },
              _react2['default'].createElement(
                'label',
                { htmlFor: 'spEmail', className: 'col-xs-12 col-sm-4 control-label' },
                'Email'
              ),
              _react2['default'].createElement(
                'div',
                { className: 'col-xs-12 col-sm-4' },
                _react2['default'].createElement('input', { className: 'form-control', id: 'spUsername', placeholder: 'Username or Email', onChange: this.onUsernameChanged.bind(this) })
              )
            ),
            _react2['default'].createElement(
              'div',
              { className: 'form-group' },
              _react2['default'].createElement(
                'label',
                { htmlFor: 'spPassword', className: 'col-xs-12 col-sm-4 control-label' },
                'Password'
              ),
              _react2['default'].createElement(
                'div',
                { className: 'col-xs-12 col-sm-4' },
                _react2['default'].createElement('input', { type: 'password', className: 'form-control', id: 'spPassword', placeholder: 'Password', onChange: this.onPasswordChanged.bind(this) })
              )
            ),
            _react2['default'].createElement(
              'div',
              { className: 'form-group' },
              _react2['default'].createElement(
                'div',
                { className: 'col-sm-offset-4 col-sm-4' },
                this.state.errorMessage === null ? null : _react2['default'].createElement(
                  'p',
                  { className: 'text-danger' },
                  this.state.errorMessage
                ),
                _react2['default'].createElement(
                  'button',
                  { type: 'submit', className: 'btn btn-primary', disabled: this.state.isProcessing },
                  'Login'
                ),
                _react2['default'].createElement(
                  _reactRouter.Link,
                  { to: '/forgot', className: 'pull-right' },
                  'Forgot Password'
                )
              )
            )
          )
        )
      )
    );
  };

  var _LoginForm = LoginForm;
  LoginForm = _reactMixin2['default'].decorate(_reactRouter.History)(LoginForm) || LoginForm;
  return LoginForm;
})(_react2['default'].Component);

exports['default'] = LoginForm;
module.exports = exports['default'];