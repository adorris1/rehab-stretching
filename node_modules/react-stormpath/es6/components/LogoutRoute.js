'use strict';

exports.__esModule = true;

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRouter = require('react-router');

var _reactRouter2 = _interopRequireDefault(_reactRouter);

var _Context = require('./../Context');

var _Context2 = _interopRequireDefault(_Context);

var _actionsUserActions = require('./../actions/UserActions');

var _actionsUserActions2 = _interopRequireDefault(_actionsUserActions);

var LogoutRoute = (function (_Route) {
  _inherits(LogoutRoute, _Route);

  function LogoutRoute() {
    _classCallCheck(this, LogoutRoute);

    _Route.apply(this, arguments);
  }

  _createClass(LogoutRoute, null, [{
    key: 'defaultProps',
    value: {
      onEnter: function onEnter(nextState, replaceState, callback) {
        var router = _Context2['default'].getInstance().getRouter();

        var loginRoute = router.getLoginRoute();
        var redirectTo = (loginRoute ? loginRoute.path : this.redirectTo) || '/';

        _actionsUserActions2['default'].logout(function () {
          replaceState({ nextPathname: nextState.location.pathname }, redirectTo);
          callback();
        });
      }
    },
    enumerable: true
  }]);

  return LogoutRoute;
})(_reactRouter.Route);

exports['default'] = LogoutRoute;
module.exports = exports['default'];