'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _storesUserStore = require('../stores/UserStore');

var _storesUserStore2 = _interopRequireDefault(_storesUserStore);

var UserComponent = (function (_React$Component) {
  _inherits(UserComponent, _React$Component);

  function UserComponent() {
    _classCallCheck(this, UserComponent);

    _React$Component.apply(this, arguments);

    this.onChangeListener = null;
    this.state = {
      user: {}
    };
  }

  UserComponent.prototype.onChange = function onChange() {
    var self = this;
    _storesUserStore2['default'].resolveSession(function (err, user) {
      if (self.onChangeListener !== null) {
        self.setState({ user: user });
      }
    });
  };

  UserComponent.prototype.componentDidMount = function componentDidMount() {
    this.onChangeListener = this.onChange.bind(this);
    _storesUserStore2['default'].addChangeListener(this.onChangeListener);
    this.onChange();
  };

  UserComponent.prototype.componentWillUnmount = function componentWillUnmount() {
    _storesUserStore2['default'].removeChangeListener(this.onChangeListener);
    this.onChangeListener = null;
  };

  return UserComponent;
})(_react2['default'].Component);

exports['default'] = UserComponent;
module.exports = exports['default'];