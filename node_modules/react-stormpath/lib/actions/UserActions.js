'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var _Context = require('./../Context');

var _Context2 = _interopRequireDefault(_Context);

var _constantsUserConstants = require('./../constants/UserConstants');

var _constantsUserConstants2 = _interopRequireDefault(_constantsUserConstants);

var UserActions = (function () {
  function UserActions(context) {
    _classCallCheck(this, UserActions);

    this.context = context;
  }

  UserActions.prototype.login = function login(options, callback) {
    this.context.getDispatcher().dispatch({
      actionType: _constantsUserConstants2['default'].USER_LOGIN,
      options: options,
      callback: callback
    });
  };

  UserActions.prototype.register = function register(options, callback) {
    this.context.getDispatcher().dispatch({
      actionType: _constantsUserConstants2['default'].USER_REGISTER,
      options: options,
      callback: callback
    });
  };

  UserActions.prototype.forgotPassword = function forgotPassword(options, callback) {
    this.context.getDispatcher().dispatch({
      actionType: _constantsUserConstants2['default'].USER_FORGOT_PASSWORD,
      options: options,
      callback: callback
    });
  };

  UserActions.prototype.verifyEmail = function verifyEmail(spToken, callback) {
    this.context.getDispatcher().dispatch({
      actionType: _constantsUserConstants2['default'].USER_VERIFY_EMAIL,
      options: {
        spToken: spToken
      },
      callback: callback
    });
  };

  UserActions.prototype.changePassword = function changePassword(options, callback) {
    this.context.getDispatcher().dispatch({
      actionType: _constantsUserConstants2['default'].USER_CHANGE_PASSWORD,
      options: options,
      callback: callback
    });
  };

  UserActions.prototype.set = function set(data) {
    this.context.getDispatcher().dispatch({
      actionType: _constantsUserConstants2['default'].USER_SET,
      data: data
    });
  };

  UserActions.prototype.logout = function logout(callback) {
    this.context.getDispatcher().dispatch({
      actionType: _constantsUserConstants2['default'].USER_LOGOUT,
      callback: callback
    });
  };

  return UserActions;
})();

exports['default'] = new UserActions(_Context2['default'].getInstance());
module.exports = exports['default'];